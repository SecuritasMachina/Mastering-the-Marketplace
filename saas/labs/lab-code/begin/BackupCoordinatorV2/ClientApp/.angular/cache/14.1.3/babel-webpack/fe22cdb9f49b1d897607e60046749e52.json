{"ast":null,"code":"import { GlobalConstModule } from '../Common/global-const/global-const.module';\nimport { environment } from '../../environments/environment';\nimport { Chart } from 'chart.js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../Common/global-const/global-const.module\";\nimport * as i4 from \"ng2-charts\";\nimport * as i5 from \"@angular/common\";\nexport let HomeComponent = /*#__PURE__*/(() => {\n  class HomeComponent {\n    constructor(_http, router, globalConstModule, _Activatedroute) {\n      this._http = _http;\n      this.router = router;\n      this.globalConstModule = globalConstModule;\n      this._Activatedroute = _Activatedroute;\n      this.name = \"Unknown\";\n      this._guid = \"Unknown\";\n      this._totalBackups = 0;\n      this._totalRestores = 0;\n      this._totalOffsiteBackups = 0;\n      this._upTimeChartData = [{\n        data: [],\n        label: 'CheckIn'\n      }];\n      this._upTimeChartDataLabels = [];\n      this._activeBackupsChartData = [{\n        data: [],\n        label: 'Backups'\n      }];\n      this._activeBackupsDataLabels = [];\n      this._offsiteFilesChartData = [{\n        data: [0, 0, 0, 0, 0, 0, 0],\n        label: 'OffSite Files'\n      }];\n      this._activeRestoresChartData = [{\n        data: [0, 0, 0, 0, 0, 0, 0],\n        label: 'Active Restores'\n      }];\n      this.lineChartData = {\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n        datasets: [{\n          data: [0, 0, 0, 0, 0, 0, 0],\n          label: 'UpTime',\n          fill: true,\n          tension: 0.5,\n          borderColor: 'black',\n          backgroundColor: 'rgba(255,0,0,0.3)'\n        }]\n      };\n      this.lineChartOptions = {\n        responsive: true,\n        scales: {\n          xAxis: {\n            min: 0\n          },\n          yAxis: {\n            min: 0\n          }\n        }\n      };\n      this.uptimeLineChartOptions = {\n        responsive: true,\n        scales: {\n          xAxis: {\n            min: 0\n          },\n          yAxis: {\n            min: 0\n          }\n        }\n      };\n      this.lineChartLegend = true;\n      this._guid = this._Activatedroute.snapshot.paramMap.get(\"guid\");\n      console.warn(\"this.guid:\" + this._guid);\n\n      if (this._guid == null) {\n        const queryString = window.location.search;\n        const urlParams = new URLSearchParams(queryString);\n        GlobalConstModule.guid = urlParams.get('guid');\n        console.warn(\"GlobalConstModule.guid:\" + GlobalConstModule.guid);\n        this._guid = GlobalConstModule.guid;\n      }\n    }\n\n    ngOnInit() {\n      this._http.get(environment.appServerURL + '/api/v2/customerConfig/' + this._guid).subscribe(result => {\n        this._AgentConfig = result;\n      }, error => console.error(error));\n\n      this._http.get(environment.appServerURL + '/api/v3/PerfHistory/' + this._guid).subscribe(result => {\n        this._ReportDTO = result;\n        console.info(' this.ReportDTO', this._ReportDTO);\n\n        this._ReportDTO.dirListFileReportItems.forEach((reportItemDTO, index) => {\n          this._upTimeChartData[0].data.push(reportItemDTO.myCount);\n\n          this._upTimeChartDataLabels.push(reportItemDTO.myDate);\n        });\n\n        console.info(\" this._upTimeChartDataLabels\", this._upTimeChartData, this._upTimeChartDataLabels);\n\n        this._ReportDTO.backupItemsFileReportItems.forEach((reportItemDTO, index) => {\n          this._totalBackups += reportItemDTO.myCount;\n\n          this._activeBackupsChartData[0].data.push(reportItemDTO.myCount);\n\n          this._activeBackupsDataLabels.push(reportItemDTO.myDate);\n        });\n\n        this._ReportDTO.offSiteFileReportItems.forEach((reportItemDTO, index) => {//    this._totalBackups += reportItemDTO.myCount;\n          //  this._activeBackupsChartData.push(reportItemDTO.myCount);\n          // this._activeBackupsDataLabels.push(reportItemDTO.myDate);\n        });\n\n        this._http.get(environment.appServerURL + '/api/v3/getCache/dirListing-' + this._guid).subscribe(result => {\n          var tmp1 = JSON.parse(result.msg);\n          tmp1.fileDTOs.forEach((obj, index) => {\n            this._totalOffsiteBackups++;\n          });\n\n          for (var _chartjsindex in Chart.instances) {\n            /*\r\n             * Here in the config your actual data and options which you have given at the\r\n               time of creating chart so no need for changing option only you can change data\r\n            */\n            //Chart.instances[_chartjsindex].config.data = [];\n            // here you can give add your data\n            Chart.instances[_chartjsindex].update(); // update will rewrite your whole chart with new value\n\n          } // console.info(' this.dirListingDTO', this._dirListingDTO);\n\n        }, error => console.error(error));\n      }, error => console.error(error));\n\n      const ctx = new CanvasRenderingContext2D(); // const chart: Chart = new Chart(ctx, {});\n    }\n\n  }\n\n  HomeComponent.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.GlobalConstModule), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n\n  HomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 20,\n    vars: 18,\n    consts: [[\"href\", \"https://storage.googleapis.com/securitasmachina.com/OffsiteBackup_InstallInstructions.pdf\", \"target\", \"_blank\"], [1, \"container\"], [1, \"row\"], [1, \"col-md\"], [1, \"col-sm\"], [\"baseChart\", \"\", \"width\", \"800\", \"height\", \"200\", 3, \"type\", \"datasets\", \"options\", \"labels\", \"legend\"], [\"baseChart\", \"\", \"width\", \"800\", \"height\", \"200\", 3, \"type\", \"datasets\", \"labels\", \"options\", \"legend\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"a\", 0);\n        i0.ɵɵtext(3, \"Agent & Azure Configuration\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"hr\");\n        i0.ɵɵelementStart(5, \"div\", 1)(6, \"div\", 2)(7, \"div\", 3);\n        i0.ɵɵtext(8);\n        i0.ɵɵpipe(9, \"date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 4);\n        i0.ɵɵtext(11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 4);\n        i0.ɵɵtext(13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 4);\n        i0.ɵɵtext(15);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtext(16, \" Agent Checkins:\\n\");\n        i0.ɵɵelement(17, \"canvas\", 5);\n        i0.ɵɵtext(18, \" Backups:\\n\");\n        i0.ɵɵelement(19, \"canvas\", 6);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"Hello, \", ctx._AgentConfig.name, \"\");\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate1(\" Last Agent Ping: \", i0.ɵɵpipeBind2(9, 15, ctx._ReportDTO.lastDateEnteredTimestamp, \"medium\"), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" Total Backups: \", ctx._totalBackups, \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" Total Restores: \", ctx._ReportDTO.totalRestores, \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" Total Offsite files: \", ctx._totalOffsiteBackups, \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"type\", \"line\")(\"datasets\", ctx._upTimeChartData)(\"options\", ctx.uptimeLineChartOptions)(\"labels\", ctx._upTimeChartDataLabels)(\"legend\", ctx.lineChartLegend);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"type\", \"line\")(\"datasets\", ctx._activeBackupsChartData)(\"labels\", ctx._activeBackupsDataLabels)(\"options\", ctx.lineChartOptions)(\"legend\", ctx.lineChartLegend);\n      }\n    },\n    dependencies: [i4.BaseChartDirective, i5.DatePipe],\n    encapsulation: 2\n  });\n  return HomeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}